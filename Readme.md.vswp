vnote_backup_file_826537664 F:/Code/ace-security/Readme.md
# 1. cloud-platform 分布式微服务
## 1.1. 模块
```
ace-security
    
  ace-modules--------------公共服务模块（基础系统、搜索、OSS）
   
  ace-auth-----------------服务鉴权中心
   
  ace-gate-----------------网关负载中心
   
  ace-common---------------通用脚手架
     
  ace-control--------------运维中心（监控、链路）
  
  ace-sidebar--------------调用第三方语言服务
```
## 1.2. 项目结构
![](_v_images/20200103103157258_12009.png)
## 1.3. 流程
![](_v_images/20200103104412402_624.png)

# 2. 技术选型
## 2.1. 基础环境
- win10
- IDEA2018.03
- JDK1.8
## 2.2. 前端
- vue
- vue-element-admin组件
## 2.3. 后台
- Spring Boot 2.1.2
- Spring Cloud (Greenwich.RELEASE) 相关核心组件
- nacos注册于配置中心
- 集成流量卫兵Sentinel
- 网关spring cloud gateway
- Spring Cloud系列的zuul和rebbion
- Spring Cloud中的Feign
- MyBatis

# 3. 使用指南
## 3.1. 前期工作
- 用Git将项目克隆下来` git clone https://github.com/WildDarts/ace-security.git`
- 需要安装Redis 、Mysql、Idea、lombok插件
- 运行根目录下的ag_admin_v1.sql，ag_auth_v1.sql，ag_nacos.sql到mysql数据库中
- 分别修改ace-auth-server,ace-admin,ace-gate中的application.yml文件的数据库密码
## 3.2. 启动工作
- 运行nacos注册中心
开启命令行到nacos中的bin目录下
运行` .\startup.cmd -m standalone`或者` .\startup.cmd
![](_v_images/20200103111752071_17428.png)
在浏览器打开
```
http://127.0.0.1:8848/nacos/
默认
用户名：nacos 
密码：nacos
```
![](_v_images/20200103112103973_3841.png)

- 运行主类
![](_v_images/20200103112234966_8146.png)
控制台没有报错的话就已经意味启动成功了
- 启动前端项目[cloud-platform-ui](https://github.com/WildDarts/cloud-platform-ui)
- 以下两个模块需要运行上面的MonitorApplication，以及ace-security\ace-control\ace-sentinel目录下的jar包
![](_v_images/20200103112353093_26885.png)
备注：运行jar包的命令是 `java -jar sentinel-dashboard.jar`

# 4. 运行效果
## 4.1. 登录
![](_v_images/20200103112908869_9764.png)
## 4.2. 运行界面
![](_v_images/20200103112832005_20524.png)

![](_v_images/20200103112931693_18149.png)

![](_v_images/20200103113013566_28116.png)

![](_v_images/20200103113029846_18918.png)

![](_v_images/20200103113134821_15811.png)

![](_v_images/20200103113253126_6626.png)


# 5. 注意事项

# 6. 鸣谢
https://gitee.com/geek_qi/cloud-platform/wikis/Home 附上我学习的链接
放上GitHub上主要是纪念自己学习的点滴和心得，别无其他用处

# 7. 规范
## 7.1. pom文件规范
引入的标签顺序为：
```
        <!--1.父坐标-->
        <!--2.本身坐标-->   
        <!--3.打包方式-->       
        <!--4.子模块-->      
        <!--5.配置-->       
        <!--6.依赖-->          
        <!--7.构建-->        
```
